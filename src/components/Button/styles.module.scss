@import 'styles/variables.scss';

.btn {
  outline: none;
  box-sizing: border-box;
  font-weight: bold;
  border: 1px solid transparent;
  border-radius: $radius-regular;
  transition: background 0.25s ease, color 0.25s ease;
}

.spinning {
  cursor: progress;
  svg {
    :global {
      animation: Spinning 0.75s linear infinite;
      @keyframes :global(Spinning) {
        from {
          transform: rotate(0deg);
        }
        to {
          transform: rotate(360deg);
        }
      }
    }
    path:first-child {
      fill: $color-white;
    }
    path:last-child {
      fill: $color-white;
    }
  }
}

/*
  values: name, font size, line height, font weight, padding.
*/
$text-sizes: (
  ('xl', $font-size-body1, 1.38, $font-weight-bold, spacing(4)),
  ('lg', $font-size-body1, 1.38, $font-weight-bold, spacing(3)),
  ('md', $font-size-body2, 1.29, $font-weight-bold, spacing(2.5)),
  ('sm', $font-size-body2, 1.29, $font-weight-bold, spacing(1.5)),
  ('xs', $font-size-caption, 1.33, $font-weight-bold, spacing(0.5))
);
@each $name, $font-size, $line-height, $font-weight, $padding in $text-sizes {
  :not(.use-icon).size-#{$name} {
    padding: $padding;
    font-size: $font-size;
    line-height: $line-height;
    font-weight: $font-weight;
  }
}

/*
  values: name, padding, icon size
*/
$icon-sizes: (
  ('xl', 32px, $font-size-body1, 1.38, $font-weight-bold, spacing(2.75)),
  ('lg', 24px, $font-size-body2, 1.38, $font-weight-bold, spacing(2.75)),
  ('md', 24px, $font-size-body2, 1.29, $font-weight-bold, spacing(1.75)),
  ('sm', 16px, $font-size-body2, 1.29, $font-weight-bold, spacing(1.5))
);
@each $name, $size, $font-size, $line-height, $font-weight,
  $padding in $icon-sizes
{
  .use-icon.size-#{$name} {
    padding: $padding;
    .icon {
      height: $size;
      width: $size;
    }
  }
}

// $name, $color, $bg-color, $bg-hover, $bg-pressed, $bg-disabled
$colors: (
  (
    'primary',
    $color-white,
    $color-primary,
    $color-primary,
    $color-primary,
    $color-grey-25
  ),
  (
    'secondary',
    $color-white,
    $color-secondary,
    $color-secondary,
    $color-secondary,
    $color-grey-25
  ),
  (
    'ghost',
    $color-grey-700,
    $color-white,
    $color-grey-25,
    $color-grey-50,
    $color-white
  ),
  (
    'invert',
    $color-grey-700,
    $color-white,
    $color-grey-10,
    $color-grey-25,
    $color-white
  ),
  (
    'outlined',
    $color-grey-700,
    $color-white,
    $color-grey-10,
    $color-grey-25,
    $color-white
  ),
  (
    'danger',
    $color-white,
    $color-red-500,
    $color-red-300,
    $color-red-500,
    $color-red-100
  )
);
@each $name, $color, $bg-color, $bg-hover, $bg-pressed, $bg-disabled in $colors
{
  .color-#{$name} {
    color: $color;
    background-color: $bg-color;
    .icon,
    .icon path {
      fill: $color;
    }
    &.disabled {
      pointer-events: none;
      background-color: $bg-disabled;
      color: $color-grey-200;
      .icon,
      .icon path {
        fill: $color-grey-200;
      }
    }
    &:not(.disabled):hover {
      background-color: $bg-hover;
    }
    &:not(.disabled):active,
    &:not(.disabled).activated {
      background-color: $bg-pressed;
    }
    &.loading {
      svg {
        path:first-child {
          fill: $color;
        }
        path:last-child {
          fill: $color;
        }
      }
    }
  }
}

.full-width {
  width: 100%;
}

.chip {
  border-radius: 500px;
}

.color-outlined {
  border-color: $color-border;
}
